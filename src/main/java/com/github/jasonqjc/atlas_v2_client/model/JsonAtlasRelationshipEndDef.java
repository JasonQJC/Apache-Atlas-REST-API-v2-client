/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an attribute name, cardinality and whether it  is the container end of the relationship.
 * <br/><br/>
 * 翻译:RelationshipEndDef表示关系的结尾。 关系的结尾由类型，属性名称，基数以及它是否是关系的容器结尾来定义。
 */
@Schema(description = "The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an attribute name, cardinality and whether it  is the container end of the relationship.")

public class JsonAtlasRelationshipEndDef {
  @JsonProperty("cardinality")
  private JsonCardinality cardinality = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isContainer")
  private Boolean isContainer = null;

  @JsonProperty("isLegacyAttribute")
  private Boolean isLegacyAttribute = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("type")
  private String type = null;

  public JsonAtlasRelationshipEndDef cardinality(JsonCardinality cardinality) {
    this.cardinality = cardinality;
    return this;
  }

   /**
   * Get cardinality
   * @return cardinality
  **/
  @Schema(description = "")
  public JsonCardinality getCardinality() {
    return cardinality;
  }

  public void setCardinality(JsonCardinality cardinality) {
    this.cardinality = cardinality;
  }

  public JsonAtlasRelationshipEndDef description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonAtlasRelationshipEndDef isContainer(Boolean isContainer) {
    this.isContainer = isContainer;
    return this;
  }

   /**
   * Get isContainer
   * @return isContainer
  **/
  @Schema(description = "")
  public Boolean isIsContainer() {
    return isContainer;
  }

  public void setIsContainer(Boolean isContainer) {
    this.isContainer = isContainer;
  }

  public JsonAtlasRelationshipEndDef isLegacyAttribute(Boolean isLegacyAttribute) {
    this.isLegacyAttribute = isLegacyAttribute;
    return this;
  }

   /**
   * Get isLegacyAttribute
   * @return isLegacyAttribute
  **/
  @Schema(description = "")
  public Boolean isIsLegacyAttribute() {
    return isLegacyAttribute;
  }

  public void setIsLegacyAttribute(Boolean isLegacyAttribute) {
    this.isLegacyAttribute = isLegacyAttribute;
  }

  public JsonAtlasRelationshipEndDef name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JsonAtlasRelationshipEndDef type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationshipEndDef jsonAtlasRelationshipEndDef = (JsonAtlasRelationshipEndDef) o;
    return Objects.equals(this.cardinality, jsonAtlasRelationshipEndDef.cardinality) &&
        Objects.equals(this.description, jsonAtlasRelationshipEndDef.description) &&
        Objects.equals(this.isContainer, jsonAtlasRelationshipEndDef.isContainer) &&
        Objects.equals(this.isLegacyAttribute, jsonAtlasRelationshipEndDef.isLegacyAttribute) &&
        Objects.equals(this.name, jsonAtlasRelationshipEndDef.name) &&
        Objects.equals(this.type, jsonAtlasRelationshipEndDef.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardinality, description, isContainer, isLegacyAttribute, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationshipEndDef {\n");
    
    sb.append("    cardinality: ").append(toIndentedString(cardinality)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isContainer: ").append(toIndentedString(isContainer)).append("\n");
    sb.append("    isLegacyAttribute: ").append(toIndentedString(isLegacyAttribute)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
