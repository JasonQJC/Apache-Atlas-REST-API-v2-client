/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * PropagateTags indicates whether tags should propagate across the relationship instance. &lt;p&gt; Tags can propagate: &lt;p&gt; NONE - not at all &lt;br&gt; ONE_TO_TWO - from end 1 to 2 &lt;br&gt; TWO_TO_ONE - from end 2 to 1  &lt;br&gt; BOTH - both ways &lt;p&gt; Care needs to be taken when specifying. The use cases we are aware of where this flag is useful: &lt;p&gt; - propagating confidentiality classifications from a table to columns - ONE_TO_TWO could be used here &lt;br&gt; - propagating classifications around Glossary synonyms - BOTH could be used here. &lt;p&gt; There is an expectation that further enhancements will allow more granular control of tag propagation and will address how to resolve conflicts.
 */
public enum JsonPropagateTags {
  NONE("NONE"),
  ONE_TO_TWO("ONE_TO_TWO"),
  TWO_TO_ONE("TWO_TO_ONE"),
  BOTH("BOTH");

  private String value;

  JsonPropagateTags(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static JsonPropagateTags fromValue(String text) {
    for (JsonPropagateTags b : JsonPropagateTags.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }
}
