/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * JsonAtlasTermCategorizationHeader
 */


public class JsonAtlasTermCategorizationHeader {
  @JsonProperty("categoryGuid")
  private String categoryGuid = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("displayText")
  private String displayText = null;

  @JsonProperty("relationGuid")
  private String relationGuid = null;

  @JsonProperty("status")
  private JsonAtlasTermRelationshipStatus status = null;

  public JsonAtlasTermCategorizationHeader categoryGuid(String categoryGuid) {
    this.categoryGuid = categoryGuid;
    return this;
  }

   /**
   * Get categoryGuid
   * @return categoryGuid
  **/
  @Schema(description = "")
  public String getCategoryGuid() {
    return categoryGuid;
  }

  public void setCategoryGuid(String categoryGuid) {
    this.categoryGuid = categoryGuid;
  }

  public JsonAtlasTermCategorizationHeader description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonAtlasTermCategorizationHeader displayText(String displayText) {
    this.displayText = displayText;
    return this;
  }

   /**
   * Get displayText
   * @return displayText
  **/
  @Schema(description = "")
  public String getDisplayText() {
    return displayText;
  }

  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }

  public JsonAtlasTermCategorizationHeader relationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
    return this;
  }

   /**
   * Get relationGuid
   * @return relationGuid
  **/
  @Schema(description = "")
  public String getRelationGuid() {
    return relationGuid;
  }

  public void setRelationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
  }

  public JsonAtlasTermCategorizationHeader status(JsonAtlasTermRelationshipStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public JsonAtlasTermRelationshipStatus getStatus() {
    return status;
  }

  public void setStatus(JsonAtlasTermRelationshipStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasTermCategorizationHeader jsonAtlasTermCategorizationHeader = (JsonAtlasTermCategorizationHeader) o;
    return Objects.equals(this.categoryGuid, jsonAtlasTermCategorizationHeader.categoryGuid) &&
        Objects.equals(this.description, jsonAtlasTermCategorizationHeader.description) &&
        Objects.equals(this.displayText, jsonAtlasTermCategorizationHeader.displayText) &&
        Objects.equals(this.relationGuid, jsonAtlasTermCategorizationHeader.relationGuid) &&
        Objects.equals(this.status, jsonAtlasTermCategorizationHeader.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryGuid, description, displayText, relationGuid, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasTermCategorizationHeader {\n");
    
    sb.append("    categoryGuid: ").append(toIndentedString(categoryGuid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    relationGuid: ").append(toIndentedString(relationGuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
