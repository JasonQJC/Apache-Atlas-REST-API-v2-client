/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Atlas relationship instance.
 */
@Schema(description = "Atlas relationship instance.")

public class JsonAtlasRelationship extends JsonAtlasStruct {
  @JsonProperty("blockedPropagatedClassifications")
  private List<JsonAtlasClassification> blockedPropagatedClassifications = null;

  @JsonProperty("createTime")
  private BigDecimal createTime = null;

  @JsonProperty("createdBy")
  private String createdBy = null;

  @JsonProperty("end1")
  private JsonAtlasObjectId end1 = null;

  @JsonProperty("end2")
  private JsonAtlasObjectId end2 = null;

  @JsonProperty("guid")
  private String guid = null;

  @JsonProperty("homeId")
  private String homeId = null;

  @JsonProperty("label")
  private String label = null;

  /**
   * 传播标签 
   */
  @JsonProperty("propagateTags")
  private JsonPropagateTags propagateTags = null;

  @JsonProperty("propagatedClassifications")
  private List<JsonAtlasClassification> propagatedClassifications = null;

  /**
   * 传播类型 
   */
  @JsonProperty("provenanceType")
  private BigDecimal provenanceType = null;

  @JsonProperty("status")
  private JsonStatusAtlasRelationship status = null;

  @JsonProperty("updateTime")
  private BigDecimal updateTime = null;

  @JsonProperty("updatedBy")
  private String updatedBy = null;

  @JsonProperty("version")
  private BigDecimal version = null;

  public JsonAtlasRelationship blockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
    return this;
  }

  public JsonAtlasRelationship addBlockedPropagatedClassificationsItem(JsonAtlasClassification blockedPropagatedClassificationsItem) {
    if (this.blockedPropagatedClassifications == null) {
      this.blockedPropagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.blockedPropagatedClassifications.add(blockedPropagatedClassificationsItem);
    return this;
  }

   /**
   * Get blockedPropagatedClassifications
   * @return blockedPropagatedClassifications
  **/
  @Schema(description = "")
  public List<JsonAtlasClassification> getBlockedPropagatedClassifications() {
    return blockedPropagatedClassifications;
  }

  public void setBlockedPropagatedClassifications(List<JsonAtlasClassification> blockedPropagatedClassifications) {
    this.blockedPropagatedClassifications = blockedPropagatedClassifications;
  }

  public JsonAtlasRelationship createTime(BigDecimal createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public BigDecimal getCreateTime() {
    return createTime;
  }

  public void setCreateTime(BigDecimal createTime) {
    this.createTime = createTime;
  }

  public JsonAtlasRelationship createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public JsonAtlasRelationship end1(JsonAtlasObjectId end1) {
    this.end1 = end1;
    return this;
  }

   /**
   * Get end1
   * @return end1
  **/
  @Schema(description = "")
  public JsonAtlasObjectId getEnd1() {
    return end1;
  }

  public void setEnd1(JsonAtlasObjectId end1) {
    this.end1 = end1;
  }

  public JsonAtlasRelationship end2(JsonAtlasObjectId end2) {
    this.end2 = end2;
    return this;
  }

   /**
   * Get end2
   * @return end2
  **/
  @Schema(description = "")
  public JsonAtlasObjectId getEnd2() {
    return end2;
  }

  public void setEnd2(JsonAtlasObjectId end2) {
    this.end2 = end2;
  }

  public JsonAtlasRelationship guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @Schema(description = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public JsonAtlasRelationship homeId(String homeId) {
    this.homeId = homeId;
    return this;
  }

   /**
   * Get homeId
   * @return homeId
  **/
  @Schema(description = "")
  public String getHomeId() {
    return homeId;
  }

  public void setHomeId(String homeId) {
    this.homeId = homeId;
  }

  public JsonAtlasRelationship label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @Schema(description = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public JsonAtlasRelationship propagateTags(JsonPropagateTags propagateTags) {
    this.propagateTags = propagateTags;
    return this;
  }

   /**
   * Get propagateTags
   * @return propagateTags
  **/
  @Schema(description = "")
  public JsonPropagateTags getPropagateTags() {
    return propagateTags;
  }

  public void setPropagateTags(JsonPropagateTags propagateTags) {
    this.propagateTags = propagateTags;
  }

  public JsonAtlasRelationship propagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    this.propagatedClassifications = propagatedClassifications;
    return this;
  }

  public JsonAtlasRelationship addPropagatedClassificationsItem(JsonAtlasClassification propagatedClassificationsItem) {
    if (this.propagatedClassifications == null) {
      this.propagatedClassifications = new ArrayList<JsonAtlasClassification>();
    }
    this.propagatedClassifications.add(propagatedClassificationsItem);
    return this;
  }

   /**
   * Get propagatedClassifications
   * @return propagatedClassifications
  **/
  @Schema(description = "")
  public List<JsonAtlasClassification> getPropagatedClassifications() {
    return propagatedClassifications;
  }

  public void setPropagatedClassifications(List<JsonAtlasClassification> propagatedClassifications) {
    this.propagatedClassifications = propagatedClassifications;
  }

  public JsonAtlasRelationship provenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
    return this;
  }

   /**
   * Get provenanceType
   * @return provenanceType
  **/
  @Schema(description = "")
  public BigDecimal getProvenanceType() {
    return provenanceType;
  }

  public void setProvenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
  }

  public JsonAtlasRelationship status(JsonStatusAtlasRelationship status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public JsonStatusAtlasRelationship getStatus() {
    return status;
  }

  public void setStatus(JsonStatusAtlasRelationship status) {
    this.status = status;
  }

  public JsonAtlasRelationship updateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public BigDecimal getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
  }

  public JsonAtlasRelationship updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @Schema(description = "")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public JsonAtlasRelationship version(BigDecimal version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public BigDecimal getVersion() {
    return version;
  }

  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelationship jsonAtlasRelationship = (JsonAtlasRelationship) o;
    return Objects.equals(this.blockedPropagatedClassifications, jsonAtlasRelationship.blockedPropagatedClassifications) &&
        Objects.equals(this.createTime, jsonAtlasRelationship.createTime) &&
        Objects.equals(this.createdBy, jsonAtlasRelationship.createdBy) &&
        Objects.equals(this.end1, jsonAtlasRelationship.end1) &&
        Objects.equals(this.end2, jsonAtlasRelationship.end2) &&
        Objects.equals(this.guid, jsonAtlasRelationship.guid) &&
        Objects.equals(this.homeId, jsonAtlasRelationship.homeId) &&
        Objects.equals(this.label, jsonAtlasRelationship.label) &&
        Objects.equals(this.propagateTags, jsonAtlasRelationship.propagateTags) &&
        Objects.equals(this.propagatedClassifications, jsonAtlasRelationship.propagatedClassifications) &&
        Objects.equals(this.provenanceType, jsonAtlasRelationship.provenanceType) &&
        Objects.equals(this.status, jsonAtlasRelationship.status) &&
        Objects.equals(this.updateTime, jsonAtlasRelationship.updateTime) &&
        Objects.equals(this.updatedBy, jsonAtlasRelationship.updatedBy) &&
        Objects.equals(this.version, jsonAtlasRelationship.version) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockedPropagatedClassifications, createTime, createdBy, end1, end2, guid, homeId, label, propagateTags, propagatedClassifications, provenanceType, status, updateTime, updatedBy, version, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelationship {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    blockedPropagatedClassifications: ").append(toIndentedString(blockedPropagatedClassifications)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    end1: ").append(toIndentedString(end1)).append("\n");
    sb.append("    end2: ").append(toIndentedString(end2)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    homeId: ").append(toIndentedString(homeId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    propagateTags: ").append(toIndentedString(propagateTags)).append("\n");
    sb.append("    propagatedClassifications: ").append(toIndentedString(propagatedClassifications)).append("\n");
    sb.append("    provenanceType: ").append(toIndentedString(provenanceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
