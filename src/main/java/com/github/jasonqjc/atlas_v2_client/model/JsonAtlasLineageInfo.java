/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * JsonAtlasLineageInfo
 */


public class JsonAtlasLineageInfo {
  @JsonProperty("baseEntityGuid")
  private String baseEntityGuid = null;

  @JsonProperty("guidEntityMap")
  private Map<String, JsonAtlasEntityHeader> guidEntityMap = null;

  @JsonProperty("lineageDepth")
  private Integer lineageDepth = null;

  @JsonProperty("lineageDirection")
  private JsonLineageDirection lineageDirection = null;

  @JsonProperty("relations")
  private List<JsonLineageRelation> relations = null;

  public JsonAtlasLineageInfo baseEntityGuid(String baseEntityGuid) {
    this.baseEntityGuid = baseEntityGuid;
    return this;
  }

   /**
   * Get baseEntityGuid
   * @return baseEntityGuid
  **/
  @Schema(description = "")
  public String getBaseEntityGuid() {
    return baseEntityGuid;
  }

  public void setBaseEntityGuid(String baseEntityGuid) {
    this.baseEntityGuid = baseEntityGuid;
  }

  public JsonAtlasLineageInfo guidEntityMap(Map<String, JsonAtlasEntityHeader> guidEntityMap) {
    this.guidEntityMap = guidEntityMap;
    return this;
  }

  public JsonAtlasLineageInfo putGuidEntityMapItem(String key, JsonAtlasEntityHeader guidEntityMapItem) {
    if (this.guidEntityMap == null) {
      this.guidEntityMap = new HashMap<String, JsonAtlasEntityHeader>();
    }
    this.guidEntityMap.put(key, guidEntityMapItem);
    return this;
  }

   /**
   * Get guidEntityMap
   * @return guidEntityMap
  **/
  @Schema(description = "")
  public Map<String, JsonAtlasEntityHeader> getGuidEntityMap() {
    return guidEntityMap;
  }

  public void setGuidEntityMap(Map<String, JsonAtlasEntityHeader> guidEntityMap) {
    this.guidEntityMap = guidEntityMap;
  }

  public JsonAtlasLineageInfo lineageDepth(Integer lineageDepth) {
    this.lineageDepth = lineageDepth;
    return this;
  }

   /**
   * Get lineageDepth
   * @return lineageDepth
  **/
  @Schema(description = "")
  public Integer getLineageDepth() {
    return lineageDepth;
  }

  public void setLineageDepth(Integer lineageDepth) {
    this.lineageDepth = lineageDepth;
  }

  public JsonAtlasLineageInfo lineageDirection(JsonLineageDirection lineageDirection) {
    this.lineageDirection = lineageDirection;
    return this;
  }

   /**
   * Get lineageDirection
   * @return lineageDirection
  **/
  @Schema(description = "")
  public JsonLineageDirection getLineageDirection() {
    return lineageDirection;
  }

  public void setLineageDirection(JsonLineageDirection lineageDirection) {
    this.lineageDirection = lineageDirection;
  }

  public JsonAtlasLineageInfo relations(List<JsonLineageRelation> relations) {
    this.relations = relations;
    return this;
  }

  public JsonAtlasLineageInfo addRelationsItem(JsonLineageRelation relationsItem) {
    if (this.relations == null) {
      this.relations = new ArrayList<JsonLineageRelation>();
    }
    this.relations.add(relationsItem);
    return this;
  }

   /**
   * Get relations
   * @return relations
  **/
  @Schema(description = "")
  public List<JsonLineageRelation> getRelations() {
    return relations;
  }

  public void setRelations(List<JsonLineageRelation> relations) {
    this.relations = relations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasLineageInfo jsonAtlasLineageInfo = (JsonAtlasLineageInfo) o;
    return Objects.equals(this.baseEntityGuid, jsonAtlasLineageInfo.baseEntityGuid) &&
        Objects.equals(this.guidEntityMap, jsonAtlasLineageInfo.guidEntityMap) &&
        Objects.equals(this.lineageDepth, jsonAtlasLineageInfo.lineageDepth) &&
        Objects.equals(this.lineageDirection, jsonAtlasLineageInfo.lineageDirection) &&
        Objects.equals(this.relations, jsonAtlasLineageInfo.relations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseEntityGuid, guidEntityMap, lineageDepth, lineageDirection, relations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasLineageInfo {\n");
    
    sb.append("    baseEntityGuid: ").append(toIndentedString(baseEntityGuid)).append("\n");
    sb.append("    guidEntityMap: ").append(toIndentedString(guidEntityMap)).append("\n");
    sb.append("    lineageDepth: ").append(toIndentedString(lineageDepth)).append("\n");
    sb.append("    lineageDirection: ").append(toIndentedString(lineageDirection)).append("\n");
    sb.append("    relations: ").append(toIndentedString(relations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
