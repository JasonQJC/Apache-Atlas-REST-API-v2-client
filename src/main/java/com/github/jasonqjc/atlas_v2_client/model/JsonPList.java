/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Paginated-list, for returning search results.
 */
@Schema(description = "Paginated-list, for returning search results.")

public class JsonPList {
  @JsonProperty("list")
  private List<Object> list = null;

  @JsonProperty("pageSize")
  private Integer pageSize = null;

  @JsonProperty("sortBy")
  private String sortBy = null;

  @JsonProperty("sortType")
  private JsonSortType sortType = null;

  @JsonProperty("startIndex")
  private Long startIndex = null;

  @JsonProperty("totalCount")
  private Long totalCount = null;

  public JsonPList list(List<Object> list) {
    this.list = list;
    return this;
  }

  public JsonPList addListItem(Object listItem) {
    if (this.list == null) {
      this.list = new ArrayList<Object>();
    }
    this.list.add(listItem);
    return this;
  }

   /**
   * Get list
   * @return list
  **/
  @Schema(description = "")
  public List<Object> getList() {
    return list;
  }

  public void setList(List<Object> list) {
    this.list = list;
  }

  public JsonPList pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public JsonPList sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @Schema(description = "")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public JsonPList sortType(JsonSortType sortType) {
    this.sortType = sortType;
    return this;
  }

   /**
   * Get sortType
   * @return sortType
  **/
  @Schema(description = "")
  public JsonSortType getSortType() {
    return sortType;
  }

  public void setSortType(JsonSortType sortType) {
    this.sortType = sortType;
  }

  public JsonPList startIndex(Long startIndex) {
    this.startIndex = startIndex;
    return this;
  }

   /**
   * Get startIndex
   * @return startIndex
  **/
  @Schema(description = "")
  public Long getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(Long startIndex) {
    this.startIndex = startIndex;
  }

  public JsonPList totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(description = "")
  public Long getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonPList jsonPList = (JsonPList) o;
    return Objects.equals(this.list, jsonPList.list) &&
        Objects.equals(this.pageSize, jsonPList.pageSize) &&
        Objects.equals(this.sortBy, jsonPList.sortBy) &&
        Objects.equals(this.sortType, jsonPList.sortType) &&
        Objects.equals(this.startIndex, jsonPList.startIndex) &&
        Objects.equals(this.totalCount, jsonPList.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(list, pageSize, sortBy, sortType, startIndex, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonPList {\n");
    
    sb.append("    list: ").append(toIndentedString(list)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortType: ").append(toIndentedString(sortType)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
