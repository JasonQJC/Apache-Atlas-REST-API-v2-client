/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * JsonDateFormat
 */


public class JsonDateFormat extends JsonFormat {
  @JsonProperty("availableLocales")
  private List<String> availableLocales = null;

  @JsonProperty("calendar")
  private BigDecimal calendar = null;

  @JsonProperty("dateInstance")
  private JsonDateFormat dateInstance = null;

  @JsonProperty("dateTimeInstance")
  private JsonDateFormat dateTimeInstance = null;

  @JsonProperty("instance")
  private JsonDateFormat instance = null;

  @JsonProperty("lenient")
  private Boolean lenient = null;

  @JsonProperty("numberFormat")
  private JsonNumberFormat numberFormat = null;

  @JsonProperty("timeInstance")
  private JsonDateFormat timeInstance = null;

  @JsonProperty("timeZone")
  private JsonTimeZone timeZone = null;

  public JsonDateFormat availableLocales(List<String> availableLocales) {
    this.availableLocales = availableLocales;
    return this;
  }

  public JsonDateFormat addAvailableLocalesItem(String availableLocalesItem) {
    if (this.availableLocales == null) {
      this.availableLocales = new ArrayList<String>();
    }
    this.availableLocales.add(availableLocalesItem);
    return this;
  }

   /**
   * Get availableLocales
   * @return availableLocales
  **/
  @Schema(description = "")
  public List<String> getAvailableLocales() {
    return availableLocales;
  }

  public void setAvailableLocales(List<String> availableLocales) {
    this.availableLocales = availableLocales;
  }

  public JsonDateFormat calendar(BigDecimal calendar) {
    this.calendar = calendar;
    return this;
  }

   /**
   * Get calendar
   * @return calendar
  **/
  @Schema(description = "")
  public BigDecimal getCalendar() {
    return calendar;
  }

  public void setCalendar(BigDecimal calendar) {
    this.calendar = calendar;
  }

  public JsonDateFormat dateInstance(JsonDateFormat dateInstance) {
    this.dateInstance = dateInstance;
    return this;
  }

   /**
   * Get dateInstance
   * @return dateInstance
  **/
  @Schema(description = "")
  public JsonDateFormat getDateInstance() {
    return dateInstance;
  }

  public void setDateInstance(JsonDateFormat dateInstance) {
    this.dateInstance = dateInstance;
  }

  public JsonDateFormat dateTimeInstance(JsonDateFormat dateTimeInstance) {
    this.dateTimeInstance = dateTimeInstance;
    return this;
  }

   /**
   * Get dateTimeInstance
   * @return dateTimeInstance
  **/
  @Schema(description = "")
  public JsonDateFormat getDateTimeInstance() {
    return dateTimeInstance;
  }

  public void setDateTimeInstance(JsonDateFormat dateTimeInstance) {
    this.dateTimeInstance = dateTimeInstance;
  }

  public JsonDateFormat instance(JsonDateFormat instance) {
    this.instance = instance;
    return this;
  }

   /**
   * Get instance
   * @return instance
  **/
  @Schema(description = "")
  public JsonDateFormat getInstance() {
    return instance;
  }

  public void setInstance(JsonDateFormat instance) {
    this.instance = instance;
  }

  public JsonDateFormat lenient(Boolean lenient) {
    this.lenient = lenient;
    return this;
  }

   /**
   * Get lenient
   * @return lenient
  **/
  @Schema(description = "")
  public Boolean isLenient() {
    return lenient;
  }

  public void setLenient(Boolean lenient) {
    this.lenient = lenient;
  }

  public JsonDateFormat numberFormat(JsonNumberFormat numberFormat) {
    this.numberFormat = numberFormat;
    return this;
  }

   /**
   * Get numberFormat
   * @return numberFormat
  **/
  @Schema(description = "")
  public JsonNumberFormat getNumberFormat() {
    return numberFormat;
  }

  public void setNumberFormat(JsonNumberFormat numberFormat) {
    this.numberFormat = numberFormat;
  }

  public JsonDateFormat timeInstance(JsonDateFormat timeInstance) {
    this.timeInstance = timeInstance;
    return this;
  }

   /**
   * Get timeInstance
   * @return timeInstance
  **/
  @Schema(description = "")
  public JsonDateFormat getTimeInstance() {
    return timeInstance;
  }

  public void setTimeInstance(JsonDateFormat timeInstance) {
    this.timeInstance = timeInstance;
  }

  public JsonDateFormat timeZone(JsonTimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(description = "")
  public JsonTimeZone getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(JsonTimeZone timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonDateFormat jsonDateFormat = (JsonDateFormat) o;
    return Objects.equals(this.availableLocales, jsonDateFormat.availableLocales) &&
        Objects.equals(this.calendar, jsonDateFormat.calendar) &&
        Objects.equals(this.dateInstance, jsonDateFormat.dateInstance) &&
        Objects.equals(this.dateTimeInstance, jsonDateFormat.dateTimeInstance) &&
        Objects.equals(this.instance, jsonDateFormat.instance) &&
        Objects.equals(this.lenient, jsonDateFormat.lenient) &&
        Objects.equals(this.numberFormat, jsonDateFormat.numberFormat) &&
        Objects.equals(this.timeInstance, jsonDateFormat.timeInstance) &&
        Objects.equals(this.timeZone, jsonDateFormat.timeZone) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableLocales, calendar, dateInstance, dateTimeInstance, instance, lenient, numberFormat, timeInstance, timeZone, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonDateFormat {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    availableLocales: ").append(toIndentedString(availableLocales)).append("\n");
    sb.append("    calendar: ").append(toIndentedString(calendar)).append("\n");
    sb.append("    dateInstance: ").append(toIndentedString(dateInstance)).append("\n");
    sb.append("    dateTimeInstance: ").append(toIndentedString(dateTimeInstance)).append("\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    lenient: ").append(toIndentedString(lenient)).append("\n");
    sb.append("    numberFormat: ").append(toIndentedString(numberFormat)).append("\n");
    sb.append("    timeInstance: ").append(toIndentedString(timeInstance)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
