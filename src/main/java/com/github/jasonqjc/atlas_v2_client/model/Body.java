/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.io.File;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Body
 */


public class Body {
  @JsonProperty("fileDetail")
  private File fileDetail = null;

  @JsonProperty("uploadedInputStream")
  private File uploadedInputStream = null;

  public Body fileDetail(File fileDetail) {
    this.fileDetail = fileDetail;
    return this;
  }

   /**
   * FormDataContentDisposition metadata of file
   * @return fileDetail
  **/
  @Schema(description = "FormDataContentDisposition metadata of file")
  public File getFileDetail() {
    return fileDetail;
  }

  public void setFileDetail(File fileDetail) {
    this.fileDetail = fileDetail;
  }

  public Body uploadedInputStream(File uploadedInputStream) {
    this.uploadedInputStream = uploadedInputStream;
    return this;
  }

   /**
   * InputStream of file
   * @return uploadedInputStream
  **/
  @Schema(description = "InputStream of file")
  public File getUploadedInputStream() {
    return uploadedInputStream;
  }

  public void setUploadedInputStream(File uploadedInputStream) {
    this.uploadedInputStream = uploadedInputStream;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.fileDetail, body.fileDetail) &&
        Objects.equals(this.uploadedInputStream, body.uploadedInputStream);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Objects.hashCode(fileDetail), Objects.hashCode(uploadedInputStream));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    fileDetail: ").append(toIndentedString(fileDetail)).append("\n");
    sb.append("    uploadedInputStream: ").append(toIndentedString(uploadedInputStream)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
