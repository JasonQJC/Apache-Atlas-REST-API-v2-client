/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * JsonAtlasRelatedTermHeader
 */


public class JsonAtlasRelatedTermHeader {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("displayText")
  private String displayText = null;

  @JsonProperty("expression")
  private String expression = null;

  @JsonProperty("relationGuid")
  private String relationGuid = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("status")
  private JsonAtlasTermRelationshipStatus status = null;

  @JsonProperty("steward")
  private String steward = null;

  @JsonProperty("termGuid")
  private String termGuid = null;

  public JsonAtlasRelatedTermHeader description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonAtlasRelatedTermHeader displayText(String displayText) {
    this.displayText = displayText;
    return this;
  }

   /**
   * Get displayText
   * @return displayText
  **/
  @Schema(description = "")
  public String getDisplayText() {
    return displayText;
  }

  public void setDisplayText(String displayText) {
    this.displayText = displayText;
  }

  public JsonAtlasRelatedTermHeader expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @Schema(description = "")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public JsonAtlasRelatedTermHeader relationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
    return this;
  }

   /**
   * Get relationGuid
   * @return relationGuid
  **/
  @Schema(description = "")
  public String getRelationGuid() {
    return relationGuid;
  }

  public void setRelationGuid(String relationGuid) {
    this.relationGuid = relationGuid;
  }

  public JsonAtlasRelatedTermHeader source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public JsonAtlasRelatedTermHeader status(JsonAtlasTermRelationshipStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public JsonAtlasTermRelationshipStatus getStatus() {
    return status;
  }

  public void setStatus(JsonAtlasTermRelationshipStatus status) {
    this.status = status;
  }

  public JsonAtlasRelatedTermHeader steward(String steward) {
    this.steward = steward;
    return this;
  }

   /**
   * Get steward
   * @return steward
  **/
  @Schema(description = "")
  public String getSteward() {
    return steward;
  }

  public void setSteward(String steward) {
    this.steward = steward;
  }

  public JsonAtlasRelatedTermHeader termGuid(String termGuid) {
    this.termGuid = termGuid;
    return this;
  }

   /**
   * Get termGuid
   * @return termGuid
  **/
  @Schema(description = "")
  public String getTermGuid() {
    return termGuid;
  }

  public void setTermGuid(String termGuid) {
    this.termGuid = termGuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasRelatedTermHeader jsonAtlasRelatedTermHeader = (JsonAtlasRelatedTermHeader) o;
    return Objects.equals(this.description, jsonAtlasRelatedTermHeader.description) &&
        Objects.equals(this.displayText, jsonAtlasRelatedTermHeader.displayText) &&
        Objects.equals(this.expression, jsonAtlasRelatedTermHeader.expression) &&
        Objects.equals(this.relationGuid, jsonAtlasRelatedTermHeader.relationGuid) &&
        Objects.equals(this.source, jsonAtlasRelatedTermHeader.source) &&
        Objects.equals(this.status, jsonAtlasRelatedTermHeader.status) &&
        Objects.equals(this.steward, jsonAtlasRelatedTermHeader.steward) &&
        Objects.equals(this.termGuid, jsonAtlasRelatedTermHeader.termGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, displayText, expression, relationGuid, source, status, steward, termGuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasRelatedTermHeader {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    relationGuid: ").append(toIndentedString(relationGuid)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    steward: ").append(toIndentedString(steward)).append("\n");
    sb.append("    termGuid: ").append(toIndentedString(termGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
