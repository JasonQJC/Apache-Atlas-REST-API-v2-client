/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Reference to an object-instance of an Atlas type - like entity.
 */
@Schema(description = "Reference to an object-instance of an Atlas type - like entity.")

public class JsonAtlasObjectId {
  @JsonProperty("guid")
  private String guid = null;

  @JsonProperty("typeName")
  private String typeName = null;

  @JsonProperty("uniqueAttributes")
  private Map<String, Object> uniqueAttributes = null;

  public JsonAtlasObjectId guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @Schema(description = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public JsonAtlasObjectId typeName(String typeName) {
    this.typeName = typeName;
    return this;
  }

   /**
   * Get typeName
   * @return typeName
  **/
  @Schema(description = "")
  public String getTypeName() {
    return typeName;
  }

  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }

  public JsonAtlasObjectId uniqueAttributes(Map<String, Object> uniqueAttributes) {
    this.uniqueAttributes = uniqueAttributes;
    return this;
  }

  public JsonAtlasObjectId putUniqueAttributesItem(String key, Object uniqueAttributesItem) {
    if (this.uniqueAttributes == null) {
      this.uniqueAttributes = new HashMap<String, Object>();
    }
    this.uniqueAttributes.put(key, uniqueAttributesItem);
    return this;
  }

   /**
   * Get uniqueAttributes
   * @return uniqueAttributes
  **/
  @Schema(description = "")
  public Map<String, Object> getUniqueAttributes() {
    return uniqueAttributes;
  }

  public void setUniqueAttributes(Map<String, Object> uniqueAttributes) {
    this.uniqueAttributes = uniqueAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasObjectId jsonAtlasObjectId = (JsonAtlasObjectId) o;
    return Objects.equals(this.guid, jsonAtlasObjectId.guid) &&
        Objects.equals(this.typeName, jsonAtlasObjectId.typeName) &&
        Objects.equals(this.uniqueAttributes, jsonAtlasObjectId.uniqueAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(guid, typeName, uniqueAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasObjectId {\n");
    
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    uniqueAttributes: ").append(toIndentedString(uniqueAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
