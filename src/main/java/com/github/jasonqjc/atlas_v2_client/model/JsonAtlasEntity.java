/*
 * Atlas REST API
 * Atlas exposes a variety of REST endpoints to work with types, entities, lineage and data discovery.
 *
 * OpenAPI spec version: 3.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jasonqjc.atlas_v2_client.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * An instance of an entity - like hive_table, hive_database.
 */
@Schema(description = "An instance of an entity - like hive_table, hive_database.")

public class JsonAtlasEntity extends JsonAtlasStruct {
  @JsonProperty("businessAttributes")
  private Map<String, Object> businessAttributes = null;

  @JsonProperty("classifications")
  private List<JsonAtlasClassification> classifications = null;

  @JsonProperty("createTime")
  private BigDecimal createTime = null;

  @JsonProperty("createdBy")
  private String createdBy = null;

  @JsonProperty("customAttributes")
  private Map<String, String> customAttributes = null;

  @JsonProperty("guid")
  private String guid = null;

  @JsonProperty("homeId")
  private String homeId = null;

  @JsonProperty("isIncomplete")
  private Boolean isIncomplete = null;

  @JsonProperty("labels")
  private List<String> labels = null;

  @JsonProperty("meanings")
  private List<JsonAtlasTermAssignmentHeader> meanings = null;

  @JsonProperty("provenanceType")
  private BigDecimal provenanceType = null;

  @JsonProperty("proxy")
  private Boolean proxy = null;

  @JsonProperty("relationshipAttributes")
  private Map<String, Object> relationshipAttributes = null;

  @JsonProperty("status")
  private JsonStatus status = null;

  @JsonProperty("updateTime")
  private BigDecimal updateTime = null;

  @JsonProperty("updatedBy")
  private String updatedBy = null;

  @JsonProperty("version")
  private BigDecimal version = null;

  public JsonAtlasEntity businessAttributes(Map<String, Object> businessAttributes) {
    this.businessAttributes = businessAttributes;
    return this;
  }

  public JsonAtlasEntity putBusinessAttributesItem(String key, Object businessAttributesItem) {
    if (this.businessAttributes == null) {
      this.businessAttributes = new HashMap<String, Object>();
    }
    this.businessAttributes.put(key, businessAttributesItem);
    return this;
  }

   /**
   * Get businessAttributes
   * @return businessAttributes
  **/
  @Schema(description = "")
  public Map<String, Object> getBusinessAttributes() {
    return businessAttributes;
  }

  public void setBusinessAttributes(Map<String, Object> businessAttributes) {
    this.businessAttributes = businessAttributes;
  }

  public JsonAtlasEntity classifications(List<JsonAtlasClassification> classifications) {
    this.classifications = classifications;
    return this;
  }

  public JsonAtlasEntity addClassificationsItem(JsonAtlasClassification classificationsItem) {
    if (this.classifications == null) {
      this.classifications = new ArrayList<JsonAtlasClassification>();
    }
    this.classifications.add(classificationsItem);
    return this;
  }

   /**
   * Get classifications
   * @return classifications
  **/
  @Schema(description = "")
  public List<JsonAtlasClassification> getClassifications() {
    return classifications;
  }

  public void setClassifications(List<JsonAtlasClassification> classifications) {
    this.classifications = classifications;
  }

  public JsonAtlasEntity createTime(BigDecimal createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public BigDecimal getCreateTime() {
    return createTime;
  }

  public void setCreateTime(BigDecimal createTime) {
    this.createTime = createTime;
  }

  public JsonAtlasEntity createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public JsonAtlasEntity customAttributes(Map<String, String> customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  public JsonAtlasEntity putCustomAttributesItem(String key, String customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new HashMap<String, String>();
    }
    this.customAttributes.put(key, customAttributesItem);
    return this;
  }

   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @Schema(description = "")
  public Map<String, String> getCustomAttributes() {
    return customAttributes;
  }

  public void setCustomAttributes(Map<String, String> customAttributes) {
    this.customAttributes = customAttributes;
  }

  public JsonAtlasEntity guid(String guid) {
    this.guid = guid;
    return this;
  }

   /**
   * Get guid
   * @return guid
  **/
  @Schema(description = "")
  public String getGuid() {
    return guid;
  }

  public void setGuid(String guid) {
    this.guid = guid;
  }

  public JsonAtlasEntity homeId(String homeId) {
    this.homeId = homeId;
    return this;
  }

   /**
   * Get homeId
   * @return homeId
  **/
  @Schema(description = "")
  public String getHomeId() {
    return homeId;
  }

  public void setHomeId(String homeId) {
    this.homeId = homeId;
  }

  public JsonAtlasEntity isIncomplete(Boolean isIncomplete) {
    this.isIncomplete = isIncomplete;
    return this;
  }

   /**
   * Get isIncomplete
   * @return isIncomplete
  **/
  @Schema(description = "")
  public Boolean isIsIncomplete() {
    return isIncomplete;
  }

  public void setIsIncomplete(Boolean isIncomplete) {
    this.isIncomplete = isIncomplete;
  }

  public JsonAtlasEntity labels(List<String> labels) {
    this.labels = labels;
    return this;
  }

  public JsonAtlasEntity addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public List<String> getLabels() {
    return labels;
  }

  public void setLabels(List<String> labels) {
    this.labels = labels;
  }

  public JsonAtlasEntity meanings(List<JsonAtlasTermAssignmentHeader> meanings) {
    this.meanings = meanings;
    return this;
  }

  public JsonAtlasEntity addMeaningsItem(JsonAtlasTermAssignmentHeader meaningsItem) {
    if (this.meanings == null) {
      this.meanings = new ArrayList<JsonAtlasTermAssignmentHeader>();
    }
    this.meanings.add(meaningsItem);
    return this;
  }

   /**
   * Get meanings
   * @return meanings
  **/
  @Schema(description = "")
  public List<JsonAtlasTermAssignmentHeader> getMeanings() {
    return meanings;
  }

  public void setMeanings(List<JsonAtlasTermAssignmentHeader> meanings) {
    this.meanings = meanings;
  }

  public JsonAtlasEntity provenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
    return this;
  }

   /**
   * Get provenanceType
   * @return provenanceType
  **/
  @Schema(description = "")
  public BigDecimal getProvenanceType() {
    return provenanceType;
  }

  public void setProvenanceType(BigDecimal provenanceType) {
    this.provenanceType = provenanceType;
  }

  public JsonAtlasEntity proxy(Boolean proxy) {
    this.proxy = proxy;
    return this;
  }

   /**
   * Get proxy
   * @return proxy
  **/
  @Schema(description = "")
  public Boolean isProxy() {
    return proxy;
  }

  public void setProxy(Boolean proxy) {
    this.proxy = proxy;
  }

  public JsonAtlasEntity relationshipAttributes(Map<String, Object> relationshipAttributes) {
    this.relationshipAttributes = relationshipAttributes;
    return this;
  }

  public JsonAtlasEntity putRelationshipAttributesItem(String key, Object relationshipAttributesItem) {
    if (this.relationshipAttributes == null) {
      this.relationshipAttributes = new HashMap<String, Object>();
    }
    this.relationshipAttributes.put(key, relationshipAttributesItem);
    return this;
  }

   /**
   * Get relationshipAttributes
   * @return relationshipAttributes
  **/
  @Schema(description = "")
  public Map<String, Object> getRelationshipAttributes() {
    return relationshipAttributes;
  }

  public void setRelationshipAttributes(Map<String, Object> relationshipAttributes) {
    this.relationshipAttributes = relationshipAttributes;
  }

  public JsonAtlasEntity status(JsonStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public JsonStatus getStatus() {
    return status;
  }

  public void setStatus(JsonStatus status) {
    this.status = status;
  }

  public JsonAtlasEntity updateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public BigDecimal getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(BigDecimal updateTime) {
    this.updateTime = updateTime;
  }

  public JsonAtlasEntity updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @Schema(description = "")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public JsonAtlasEntity version(BigDecimal version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public BigDecimal getVersion() {
    return version;
  }

  public void setVersion(BigDecimal version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonAtlasEntity jsonAtlasEntity = (JsonAtlasEntity) o;
    return Objects.equals(this.businessAttributes, jsonAtlasEntity.businessAttributes) &&
        Objects.equals(this.classifications, jsonAtlasEntity.classifications) &&
        Objects.equals(this.createTime, jsonAtlasEntity.createTime) &&
        Objects.equals(this.createdBy, jsonAtlasEntity.createdBy) &&
        Objects.equals(this.customAttributes, jsonAtlasEntity.customAttributes) &&
        Objects.equals(this.guid, jsonAtlasEntity.guid) &&
        Objects.equals(this.homeId, jsonAtlasEntity.homeId) &&
        Objects.equals(this.isIncomplete, jsonAtlasEntity.isIncomplete) &&
        Objects.equals(this.labels, jsonAtlasEntity.labels) &&
        Objects.equals(this.meanings, jsonAtlasEntity.meanings) &&
        Objects.equals(this.provenanceType, jsonAtlasEntity.provenanceType) &&
        Objects.equals(this.proxy, jsonAtlasEntity.proxy) &&
        Objects.equals(this.relationshipAttributes, jsonAtlasEntity.relationshipAttributes) &&
        Objects.equals(this.status, jsonAtlasEntity.status) &&
        Objects.equals(this.updateTime, jsonAtlasEntity.updateTime) &&
        Objects.equals(this.updatedBy, jsonAtlasEntity.updatedBy) &&
        Objects.equals(this.version, jsonAtlasEntity.version) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessAttributes, classifications, createTime, createdBy, customAttributes, guid, homeId, isIncomplete, labels, meanings, provenanceType, proxy, relationshipAttributes, status, updateTime, updatedBy, version, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonAtlasEntity {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    businessAttributes: ").append(toIndentedString(businessAttributes)).append("\n");
    sb.append("    classifications: ").append(toIndentedString(classifications)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    guid: ").append(toIndentedString(guid)).append("\n");
    sb.append("    homeId: ").append(toIndentedString(homeId)).append("\n");
    sb.append("    isIncomplete: ").append(toIndentedString(isIncomplete)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    meanings: ").append(toIndentedString(meanings)).append("\n");
    sb.append("    provenanceType: ").append(toIndentedString(provenanceType)).append("\n");
    sb.append("    proxy: ").append(toIndentedString(proxy)).append("\n");
    sb.append("    relationshipAttributes: ").append(toIndentedString(relationshipAttributes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
